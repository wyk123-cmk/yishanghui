<template>
	<view class="page-bg">
		<view class="search-box">
			<input type="text" placeholder="请输入姓名/电话/地区" v-model="keyword" />
			<text @click="search" class="iconfont icon-chaxun"></text>
		</view>
		<view class="tab-nav">
			<view @click="bindTabNav(0)" :class="[isActive==0?'active':'']"><text>个人</text></view>
			<view @click="bindTabNav(1)" :class="[isActive==1?'active':'']"><text>企业</text></view>
		</view>
		<view v-if="isActive == 0">
			<view v-if="personalTotal==0" class="none-data-list"><image src="../../static/images/none-dz.svg"></image>暂无内容</view>
			<scroll-view v-else class="scroll-wrapper" scroll-y="true" @scrolltolower="personalScrolltolower">
				<view class="address-list" v-for="(item, i) in personalList" :key="item.contactsCode">
					<view @click="btnSetAddress(item)">
						<view>
							<text v-if="item.isDefault" class="status">默认</text>
							<text class="name">个人=={{item.name}}</text>
							<text>{{item.phone}}</text>
							<text class="iconfont icon-phone" @click="phoneCall(item.phone)"></text>
						</view>
						<text class="address">{{item.areaInfo.province+item.areaInfo.city+item.areaInfo.area+item.address}}</text>
					</view>
					<view class="operate">
						<view class="checkbox">
							<checkbox-group v-if="!item.isDefault" @change="setDefault">
								<checkbox :value="item.contactsCode" class="orange"></checkbox>
								<text>设为默认地址</text>
							</checkbox-group>
						</view>
						<view>
							<view class="item-icon" @click="goEdit(item.contactsCode)">
								<text class="iconfont icon-bianji2"></text>编辑
							</view>
							<view class="item-icon" @click="remove(item.contactsCode)">
								<text class="iconfont icon-shanchu"></text>删除
							</view>
						</view>
					</view>
				</view>
				<view v-if="personalList.length == personalTotal" class="no-more">没有更多了</view>
			</scroll-view>
		</view>
		<view v-if="isActive == 1">
			<view v-if="companyTotal==0" class="none-data-list"><image src="../../static/images/none-dz.svg"></image>暂无内容</view>
			<scroll-view v-else class="scroll-wrapper" scroll-y="true" @scrolltolower="companyScrolltolower">
				<view class="address-list" v-for="(item, i) in companyList" :key="item.contactsCode">
					<view @click="btnSetAddress(item)">
						<view>
							<text v-if="item.isDefault" class="status">默认</text>
							<text class="name">企业=={{item.name}}</text>
							<text>{{item.phone}}</text>
							<text class="iconfont icon-phone" @click="phoneCall(item.phone)"></text>
						</view>
						<text class="address">{{item.areaInfo.province+item.areaInfo.city+item.areaInfo.area+item.address}}</text>
					</view>
					<view class="operate">
						<view class="checkbox">
							<checkbox-group v-if="!item.isDefault" @change="setDefault">
								<checkbox :value="item.contactsCode" class="orange"></checkbox>
								<text>设为默认地址</text>
							</checkbox-group>
						</view>
						<view>
							<view class="item-icon" @click="goEdit(item.contactsCode)">
								<text class="iconfont icon-bianji2"></text>编辑
							</view>
							<view class="item-icon" @click="remove(item.contactsCode)">
								<text class="iconfont icon-shanchu"></text>删除
							</view>
						</view>
					</view>
				</view>
				<view v-if="companyList.length == companyTotal" class="no-more">没有更多了</view>
			</scroll-view>
		</view>
		<view @click="goEdit()" class="btn">
			<button>新增地址</button>
		</view>
	</view>
</template>
<script>
export default {
	data() {
		return {
			keyword: "",
			type: "",
			isInit: true,
			isActive: 0,
			limit: 5,
			personalPage: 1,
			personalTotal: 0,
			personalList: [],
			companyPage: 1,
			companyTotal: 0,
			companyList: [],
		}
	},
	onLoad(options) {
		if(options.type != undefined) this.type = options.type;
	},
	onShow() {
		if(!this.isInit) {
			this.isInit = true;
			return false;
		}
		this.keyword = "";
		this.search()
	},
	methods: {
		bindTabNav: function(key){
			if(this.isActive == key) return false;
			this.isActive = key;
		},
		search: function() {
			this.personalPage = 1;
			this.personalTotal = 0;
			this.personalList = [];
			this.companyPage = 1;
			this.companyTotal = 0;
			this.companyList = [];
			this.personalAddressList();
			this.companyAddressList();
		},
		//个人
		personalScrolltolower:  function() {
			console.log("this.isActive:",this.isActive);
			if(Math.ceil(this.personalPage / this.limit) >= this.personalTotal){
				this.personalAddressList();
			}
		},
		personalAddressList(){
			const that = this;
			that.getList(that.personalPage, function(res){
				console.log("个人",res)
				that.personalPage++;
				that.personalTotal = res.total;
				that.personalList = that.personalList.concat(res.list);
			})
		},
		//企业
		companyScrolltolower:  function() {
			console.log("this.isActive:",this.isActive);
			if(Math.ceil(this.companyPage / this.limit) >= this.companyTotal){
				this.companyAddressList();
			}
		},
		companyAddressList(){
			const that = this;
			that.getList(that.companyPage, function(res){
				console.log("企业",res)
				that.companyPage++;
				that.companyTotal = res.total;
				that.companyList = that.companyList.concat(res.list);
			})
		},
		//设置默认
		setDefault: function(e){
			let code = e.detail.value[0];
			const that = this;
			uni.showLoading({ title: '加载中...' });
			that.$util.networkRequest({
				url: "/AddressBook/SetDefault",
				method: "POST",
				data: {value: code},
				success: function(res){
					that.keyword = "";
					if(that.$store.state.expressDeliveryInfo["repAddress"].contactsCode == code){
						that.$store.state.expressDeliveryInfo["repAddress"] = {};
					}
					that.search();
				}
			})
		},
		//删除
		remove: function(_code){
			const that = this;
			uni.showModal({
			    title: '提示',
			    content: '您确定要删除吗？',
			    success: function (res) {
			        if (res.confirm) {
						that.$util.networkRequest({
							url: "/AddressBook/Remove",
							data: {value: _code},
							method: "POST",
							success: function(res){
								uni.showToast({
								    title: '删除成功',
									 duration: 2000,
									 icon:'none',
								});
								that.dataList = that.dataList.filter(item => {
									return item.contactsCode != _code;
								});
							}
						});
					}
				},
			});
		},
		
		getList: function(page, callback){
			const that = this;
			uni.showLoading({ title: '加载中...' });
			that.$util.networkRequest({
				url: "/AddressBook/GetListByPage",
				data: {
					page: page,
					limit: that.limit,
					keyword: that.keyword
				},
				success: function(res){
					let total = res.total;
					if(total == 0 || res.list.length == 0) return false;
					if(callback) callback(res);
				}
			})
		},
		goEdit: function(_code){
			_code = _code == undefined?'':_code;
			uni.navigateTo({url: "/pages/me/addressEdit?code="+_code+"&type="+this.type});
		},
		
		btnSetAddress(data){
			if(this.type == "") return false;
			let _contactsCode = data.contactsCode;
			let newData = {
				name: data.name,
				contactsCode: _contactsCode,
				address: data.areaInfo.province+data.areaInfo.city+data.areaInfo.area+data.address,
				ad: data.address,
				areaCode: data.areaInfo.areaCode
			};
			if(this.type == "send"){
				if(JSON.stringify(this.$store.state.expressDeliveryInfo["repAddress"]) != "{}"){
					if(this.$store.state.expressDeliveryInfo["repAddress"].contactsCode == _contactsCode){
						this.$util.showToast("寄件人不能和收件人一致");
						return false;
					}
				}
				this.$store.state.expressDeliveryInfo["sendAddress"] = newData;
			}
			if(this.type == "rep"){
				if(JSON.stringify(this.$store.state.expressDeliveryInfo["sendAddress"]) != "{}"){
					if(this.$store.state.expressDeliveryInfo["sendAddress"].contactsCode == _contactsCode){
						this.$util.showToast("收件人不能和寄件人一致");
						return false;
					}
				}else{
					if(data.isDefault) {
						this.$util.showToast("收件人不能和寄件人一致");
						return false;
					}
				}
				this.$store.state.expressDeliveryInfo["repAddress"] = newData;
			}
			this.$util.navigateBack(this);
		},
		//拨打电话
		phoneCall(tel){
			this.isInit = false;
			uni.makePhoneCall({
				phoneNumber: tel //仅为示例
			});
		}
	}
}
</script>
<style scoped>
.search-box{
	background-color: #FFFFFF;
	padding: 8px 15px;
	display: -webkit-box;
	display: box;
}
.search-box input,
.search-box text{
	height: 35px;
	line-height: 35px;
	background-color: #F7F7F7;
}
.search-box input{
	border-top-left-radius: 4px;
	border-bottom-left-radius: 4px;
	width: calc(100% - 40px);
	padding-left: 10px;
}
.search-box text{
	border-bottom-right-radius: 4px;
	border-top-right-radius: 4px;
	display: block;
	width: 30px;
	text-align: center;
}
.tab-nav{
	background-color: #FFFFFF;
	line-height: 35px;
	display: flex;
	display: -webkit-flex;
	text-align: center;
}
.tab-nav > view{
	width: 50%;
}
.tab-nav > view text{
	width: 60%;
	display: block;
	margin: 0 auto;
}
.tab-nav .active text{
	border-bottom: 2px solid #4285F4;
}
.scroll-wrapper{
	position: absolute;
	top: 90px;
	left: 0;
	right: 0;
	bottom: 64px;
	overflow-y: auto;
}
.address-list{
	background-color: #FFFFFF;
	margin-top: 10px;
	padding: 15px 15px 8px;
	line-height: 22px;
}
.address-list .name{
	font-size: 16px;
	margin-right: 8px;
}
.address-list .status{
	background: rgba(248, 111, 0, .2);
	color: #FD9523;
	font-size: 12px;
	float: left;
	display: block;
	padding: 0 4px;
	margin-right: 8px;
	border-radius: 2px;
}
.address-list .address{
	border-bottom: 1px solid #EEEEEE;
	font-size: 13px;
	color: #666666;
	display: block;
	padding: 5px 0 8px;
}
.address-list .icon-phone{
	color: #469DE2;
	padding-left: 5px;
	float: right;
}
.operate{
	justify-content: space-between;
	margin-top: 8px;
}
.operate,
.operate .checkbox checkbox-group,
.operate .item-icon{
	display: flex;
	display: -webkit-flex;
	align-items: center;
}
.operate .checkbox{
	margin-left: -5px;
}
.operate .item-icon{
	float: left;
	color: #999999;
	margin-left: 10px;
}
.operate .item-icon text{
	padding-right: 3px;
}
.btn{
	background-color: #FFFFFF;
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	padding: 10px 15px;
}
.btn button{
	background-color: #4285F4;
	color: #FFFFFF;
	line-height: 44px;
	border-radius: 20px;
}
.no-more{
	color:  #999999;
	text-align: center;
	padding: 10px 0;
}
</style>
